---
description: Markdown 文档规范
globs: **/*.md, **/*.markdown, **/*.mdown, **/*.mdx
---

# Markdown 文档规范

## AI 工作模式

### 角色定位
```yaml
主要职责:
  - Markdown 规范专家
  - 文档结构顾问
  - 排版规范专家
  - 内容优化顾问
  - 文档质量顾问
  - 工具使用专家
  - 自动化工具专家
  - 文档转换专家

工作方式:
  - 规范文档结构
  - 优化文档格式
  - 提升可读性
  - 确保一致性
  - 优化文档工具
  - 提供最佳实践
  - 解决格式问题
  - 自动化处理

专业领域:
  - Markdown 语法
  - 文档结构设计
  - 排版规范
  - 工具链集成
  - 自动化处理
  - 格式转换
  - 文档生成
  - 质量控制
```

### 场景识别策略
```yaml
文档类型识别:
  - 判断文档类型和用途
  - 识别格式要求
  - 确定目标受众
  - 评估复杂度
  - 识别特殊需求
  - 确定工具支持

需求分析:
  - 提取格式需求
  - 识别结构要求
  - 确定质量标准
  - 分析自动化可能
  - 评估工具支持
  - 确定优化方向
```

### AI 响应策略
```yaml
文档优化:
  - 遵循 Markdown 最佳实践
  - 实现结构优化
  - 规范格式处理
  - 优化可读性
  - 自动化建议
  - 工具推荐

问题分析:
  - 评估文档问题
  - 检查格式规范
  - 分析结构合理性
  - 审查内容质量
  - 验证工具支持
  - 确保实施效果
```

## 基本结构

### 必需部分
```yaml
required_sections:
  - 文档标题 (h1)
  - 文档简介
  - 主要内容
  - 参考链接（如果有）
```

### 可选部分
```yaml
optional_sections:
  - 目录 [TOC]
  - 徽章（如构建状态、版本等）
  - 图片/截图
  - 更新日志
  - 贡献指南
  - 许可证
```

## 格式规范

### 标题规范
- 文档必须有且仅有一个一级标题（h1）
- 使用 ATX 风格标题（# 号）
- `#` 号后必须加一个空格
- 标题层级不能跳级使用
- 标题前后要空一行
- 标题末尾不要加标点符号
- 标题要简短明确

示例：
```markdown
# 文档标题

## 二级标题

### 三级标题
```

### 段落格式
- 段落之间空一行
- 每行不超过 80 个字符
- 使用空行进行段落分隔
- 不使用行尾两空格换行
- 使用标准的段落缩进
- 保持段落主题单一

### 列表规范
- 无序列表统一使用 `-` 作为标记
- 有序列表使用 `1.` 作为标记
- 列表层级使用 2 个空格缩进
- 列表项前后要空一行
- 保持列表项简洁
- 列表层级不宜过深（建议不超过 3 层）

示例：
```markdown
- 一级列表项
  - 二级列表项
    - 三级列表项

1. 第一步
2. 第二步
   - 子步骤
```

### 代码规范
- 行内代码使用单反引号包裹 `` `code` ``
- 代码块使用三反引号包裹并指定语言
- 代码块前后要空一行
- 保持代码格式化和缩进
- 添加必要的代码注释

示例：
```markdown
这是一个 `行内代码` 示例。

```javascript
// 这是一个代码块示例
function example() {
  return 'Hello World';
}
```
```

### 链接与图片
- 使用有意义的链接文字
- 避免使用"点击这里"等模糊表述
- 图片添加有意义的 alt 文本
- 使用相对路径引用本地资源
- 大型链接使用引用式链接

示例：
```markdown
[项目主页](mdc:https:/example.com)
![项目 Logo](mdc:images/logo.png "Logo 标题")

[引用式链接][1]
[1]: https://example.com
```

### 表格规范
- 使用标准的表格语法
- 表格前后空一行
- 对齐标记可选但要保持一致
- 单元格内容简洁
- 表头要清晰明确

示例：
```markdown
| 列 1 | 列 2 | 列 3 |
|------|:----:|------:|
| 左对齐 | 居中 | 右对齐 |
```

### 引用规范
- 使用 `>` 进行引用
- 引用前后空一行
- 多行引用保持 `>` 一致
- 引用可以嵌套使用
- 引用中可以使用其他 Markdown 语法

示例：
```markdown
> 这是一个引用示例
> 可以包含多行内容
>> 这是嵌套引用
```

### 强调语法
- 使用 `**文本**` 进行加粗
- 使用 `*文本*` 进行斜体
- 使用 `~~文本~~` 进行删除线
- 不滥用强调语法
- 避免使用多重强调

### 分隔线
- 使用三个或以上 `-` 或 `*` 
- 分隔线前后要空一行
- 不要在分隔线前后使用其他字符

### 特殊字符
- 使用反斜杠 `\` 转义特殊字符
- HTML 实体使用 `&` 开头的形式
- 保持特殊字符使用的一致性

## 中文排版规范

### 空格使用
- 中英文之间需要加空格
- 中文与数字之间需要加空格
- 数字与单位之间不加空格
- 全角标点与其他字符之间不加空格
- 链接文字与 URL 之间需要加空格

### 标点符号
- 使用全角中文标点
- 不重复使用标点符号
- 专有名词中的标点使用半角字符
- 破折号使用一个 `——`
- 省略号使用 `……`

## 文件管理

### 文件命名
- 使用小写字母
- 单词间用连字符 `-` 分隔
- 避免使用空格和特殊字符
- 使用有意义的文件名
- 添加适当的文件扩展名

### 文件组织
- 相关文档放在同一目录
- 图片资源集中管理
- 使用清晰的目录结构
- 保持文件结构的一致性

## 最佳实践

### 写作建议
- 保持文档的简洁性
- 使用清晰的语言
- 避免重复内容
- 定期更新文档
- 注意文档的可读性

### 常见问题
- 检查拼写和语法
- 验证所有链接
- 确保图片可访问
- 保持格式一致
- 避免过度格式化

### 工具建议
- 使用 Markdown 编辑器
- 配置 Markdown Lint
- 使用版本控制
- 定期备份文档
- 使用预览功能

## 附录

### Markdown Lint 规则
```yaml
rules:
  MD001: true    # 标题层级
  MD002: true    # 文档第一个标题
  MD003: true    # 标题风格
  MD004: true    # 无序列表风格
  MD005: true    # 列表对齐
  MD006: true    # 列表缩进
  MD007: true    # 无序列表缩进
  MD009: true    # 行尾空格
  MD010: true    # 硬 Tab
  MD011: true    # 反引号内容
  MD012: true    # 多个空行
  MD013: false   # 行长度
  MD014: true    # 命令行提示符
  MD018: true    # 标题空格
  MD019: true    # 多个空格
  MD020: true    # 标题内容前的空格
  MD021: true    # 多个空格
  MD022: true    # 标题前后的空行
  MD023: true    # 标题前的空格
  MD024: true    # 重复标题
  MD025: true    # 多个顶级标题
  MD026: true    # 标题末尾标点
  MD027: true    # 多个空格
  MD028: true    # 空行中的空格
  MD029: true    # 有序列表数字
  MD030: true    # 列表标记后的空格
  MD031: true    # 代码块空行
  MD032: true    # 列表空行
  MD033: true    # 内联 HTML
  MD034: true    # 裸 URL
  MD035: true    # 分隔线风格
  MD036: true    # 强调作为标题
  MD037: true    # 强调标记内的空格
  MD038: true    # 代码标记内的空格
  MD039: true    # 链接空格
  MD040: true    # 代码块语言
  MD041: true    # 文件第一行
  MD042: true    # 空链接
  MD043: true    # 必需标题结构
  MD044: true    # 专有名词大小写
  MD045: true    # 图片 alt 文本
  MD046: true    # 代码块风格
  MD047: true    # 文件末尾空行
  MD048: true    # 代码块风格
```