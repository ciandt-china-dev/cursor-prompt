---
description: README 文件规范
globs: **/README.md, **/readme.md
---
# README 文件规范

## AI 工作模式

### 角色定位
```yaml
主要职责:
  - 文档规范专家
  - 结构设计顾问
  - 内容优化专家
  - 可读性顾问
  - 文档质量顾问
  - 最佳实践指导

工作方式:
  - 分析项目特点
  - 设计文档结构
  - 优化内容组织
  - 提升可读性
  - 确保完整性
  - 规范格式要求

专业领域:
  - 文档结构设计
  - 内容组织优化
  - 格式规范制定
  - 示例模板设计
  - 最佳实践总结
  - 质量标准制定
```

### 场景识别策略
```yaml
项目类型识别:
  - 判断项目规模和类型
  - 识别目标用户群
  - 确定技术复杂度
  - 评估文档需求
  - 识别特殊要求
  - 确定重点内容

需求分析:
  - 提取核心信息
  - 识别关键部分
  - 确定详细程度
  - 分析使用场景
  - 评估维护需求
  - 确定更新策略
```

## 文档结构

### 基本结构
```yaml
必需部分:
  - 项目标题和简介
  - 项目功能特性
  - 环境和依赖
  - 安装和配置
  - 使用说明
  - 许可说明

可选部分:
  - 目录导航
  - 项目背景
  - 技术架构
  - 开发指南
  - 示例代码
  - 常见问题
  - 更新日志
  - 贡献指南
  - 相关链接
```

### 内容顺序
```yaml
推荐顺序:
  1. 项目标题
  2. 项目简介
  3. 目录导航（可选）
  4. 功能特性
  5. 快速开始
  6. 详细文档
  7. 补充信息
```

## 内容规范

### 项目标题
```yaml
格式要求:
  - 项目名称清晰可见
  - 简短项目描述
  - 必要的项目徽章
  - 可选的项目图标

示例结构:
  # 项目名称
  > 一句话项目描述

  [可选的徽章]
  [可选的项目图标/截图]
```

### 功能特性
```yaml
要求:
  - 列出核心功能
  - 突出主要特点
  - 使用简洁的描述
  - 适当的分类组织
```

### 环境依赖
```yaml
要求:
  - 运行环境要求
  - 必要的依赖项
  - 推荐的配置
  - 可选的依赖
```

### 安装说明
```yaml
要求:
  - 安装步骤清晰
  - 必要的命令说明
  - 配置说明
  - 验证方法
```

### 使用说明
```yaml
要求:
  - 基本使用方法
  - 常用功能说明
  - 配置说明
  - 注意事项
```

## 编写规范

### 格式要求
```yaml
基本要求:
  - 使用 Markdown 格式
  - 标题层级清晰
  - 段落结构合理
  - 适当使用列表
  - 代码块标注语言
```

### 写作风格
```yaml
基本原则:
  - 简明扼要
  - 结构清晰
  - 重点突出
  - 易于理解
```

### 内容建议
```yaml
注意事项:
  - 避免冗长描述
  - 保持内容更新
  - 注意信息安全
  - 适当的示例
```

## 模板示例

### 基础模板
```markdown
# 项目名称

> 项目简介

## 功能特性

- 功能一
- 功能二

## 环境依赖

- 依赖项一
- 依赖项二

## 安装说明

安装步骤

## 使用说明

使用方法

## 许可说明

许可证信息
```

### 完整模板
```markdown
# 项目名称

> 项目简介

[徽章]

## 目录

- [功能特性](mdc:#功能特性)
- [快速开始](mdc:#快速开始)
- [使用说明](mdc:#使用说明)
- [其他信息](mdc:#其他信息)

## 功能特性

功能列表

## 快速开始

快速上手指南

## 使用说明

详细使用说明

## 其他信息

补充信息
```

## 最佳实践

### 通用建议
- 保持文档更新
- 确保信息准确
- 适当的排版
- 合理的结构

### 内容建议
- 重要信息前置
- 逻辑层次分明
- 示例简单有效
- 链接可访问

### 维护建议
- 定期更新内容
- 响应用户反馈
- 保持版本同步
- 及时修复错误 